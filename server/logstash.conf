input {
  redis {
    host      => "redis"
    data_type => "list"
    key       => "logstash"
    codec     => "json"
  }
}

filter {
  if [type] == "syslog" {
    grok {
      match => [ "message" , "%{SYSLOG5424PRI}%{NONNEGINT:ver} +(?:%{TIMESTAMP_ISO8601:ts}|-) +(?:%{HOSTNAME:containerid}|-) +(?:%{NOTSPACE:containername}|-) +%{NUMBER:dockersize} - - %{GREEDYDATA:message}" ]
      overwrite => [ "message" ]
    }
    grok {
      match => [ "message" , ".+%{IP:clientip} %{USER:ident} %{USER:auth} \[%{HTTPDATE:timestamp}\] \"(?:%{WORD:verb} %{NOTSPACE:request}(?: HTTP/%{NUMBER:httpversion})?|%{DATA:rawrequest})\" %{NUMBER:response} (?:%{NUMBER:bytes}|-) %{QS:referrer} %{QS:agent}%{GREEDYDATA:extra_fields}"]
      add_tag => [ "nginx" ]
    }
    grok {
      match => [ "message" , ".+\[%{HTTPDATE}\].+/position/\?client_key=%{USERNAME:project_key}&.+"]
      add_tag => [ "page_view" ]
    }
    grok {
      match => [ "message" , ".+ \[%{HTTPDATE}\].+lat=%{BASE10NUM:lat}&lng=%{BASE10NUM:lng}.+wgs_uid=%{UUID:wgs_uid}.*&project_key=%{USERNAME:project_key}&"]
      add_tag => [ "map" ]
    }

    date {
        match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
    }
    geoip {
      source => "clientip"
    }
  }
}

output {
  elasticsearch { hosts => "elasticsearch" }
  stdout { codec => rubydebug }
}